#!/bin/bash

# Discord Bot Pre-Commit Hook
# Runs formatting and linting for the Rust discord bot

set -e

# Colors for output
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
NC='\033[0m' # No Color

# Get the app directory
APP_DIR="$(cd "$(dirname "${BASH_SOURCE[0]}")/.." && pwd)"
cd "$APP_DIR"

echo -e "${BLUE}üîß Running discord-bot pre-commit checks...${NC}"

# Store originally staged files
STAGED_FILES=$(git diff --cached --name-only --diff-filter=ACM | grep '^apps/discord-bot/' || true)
if [ -z "$STAGED_FILES" ]; then
    echo -e "${YELLOW}‚ö†Ô∏è  No discord-bot files staged${NC}"
    exit 0
fi

# Check if Cargo.toml exists
if [ ! -f "Cargo.toml" ]; then
    echo -e "${RED}‚úó Cargo.toml not found in $APP_DIR${NC}"
    exit 1
fi

# Run cargo fmt to apply formatting fixes
echo -e "${BLUE}‚Üí Applying Rust formatting...${NC}"
cargo fmt
echo -e "${GREEN}‚úì Formatting applied${NC}"

# Run cargo fix to apply safe fixes for compiler warnings
echo -e "${BLUE}‚Üí Applying safe fixes for compiler warnings...${NC}"
if cargo fix --allow-dirty --allow-staged; then
    echo -e "${GREEN}‚úì Compiler warning fixes applied${NC}"
else
    echo -e "${YELLOW}‚ö†Ô∏è  Some fixes couldn't be applied automatically${NC}"
fi

# Run cargo clippy with auto-fix for applicable suggestions
echo -e "${BLUE}‚Üí Running Clippy with auto-fix...${NC}"
CLIPPY_ERROR_FILE="/tmp/clippy_errors_$$.tmp"
if cargo clippy --fix --allow-dirty --allow-staged -- -D warnings 2>"$CLIPPY_ERROR_FILE"; then
    echo -e "${GREEN}‚úì Clippy fixes applied${NC}"
    rm -f "$CLIPPY_ERROR_FILE"
else
    # Check if there were actual errors or just warnings about fixes
    if [ -s "$CLIPPY_ERROR_FILE" ]; then
        echo -e "${YELLOW}‚ö†Ô∏è  Clippy encountered issues during auto-fix:${NC}"
        cat "$CLIPPY_ERROR_FILE"
    fi
    rm -f "$CLIPPY_ERROR_FILE"
    
    # Run clippy again to show remaining issues
    echo -e "${YELLOW}‚ö†Ô∏è  Running Clippy to show remaining issues...${NC}"
    if cargo clippy -- -D warnings; then
        echo -e "${GREEN}‚úì All Clippy checks passed${NC}"
    else
        echo -e "${RED}‚úó Clippy found issues that couldn't be auto-fixed${NC}"
        echo -e "${YELLOW}Please fix the Clippy warnings manually before committing${NC}"
        exit 1
    fi
fi

# Optional: Run cargo check for compilation errors
echo -e "${BLUE}‚Üí Running cargo check...${NC}"
if cargo check; then
    echo -e "${GREEN}‚úì Code compiles successfully${NC}"
else
    echo -e "${RED}‚úó Compilation failed${NC}"
    exit 1
fi

# Re-stage only the files that were originally staged
if [ -n "$STAGED_FILES" ]; then
    echo "$STAGED_FILES" | xargs -r git add
fi

echo -e "${GREEN}‚úÖ Discord-bot pre-commit checks completed successfully${NC}"