--
-- PostgreSQL database dump
--

\restrict U7pophYKhnWfo6pJQmApegFvbbcURBZmrXMfduACDwtoYudKywRyb0dxk5FbaPn

-- Dumped from database version 17.6
-- Dumped by pg_dump version 17.6

SET statement_timeout = 0;
SET lock_timeout = 0;
SET idle_in_transaction_session_timeout = 0;
SET transaction_timeout = 0;
SET client_encoding = 'UTF8';
SET standard_conforming_strings = on;
SELECT pg_catalog.set_config('search_path', '', false);
SET check_function_bodies = false;
SET xmloption = content;
SET client_min_messages = warning;
SET row_security = off;

--
-- Name: public; Type: SCHEMA; Schema: -; Owner: pg_database_owner
--

CREATE SCHEMA public;


ALTER SCHEMA public OWNER TO pg_database_owner;

--
-- Name: SCHEMA public; Type: COMMENT; Schema: -; Owner: pg_database_owner
--

COMMENT ON SCHEMA public IS 'standard public schema';


--
-- Name: get_country_from_tag_name(text); Type: FUNCTION; Schema: public; Owner: geometa
--

CREATE FUNCTION public.get_country_from_tag_name(tag_name text) RETURNS text
    LANGUAGE plpgsql
    AS $$
DECLARE
    country_raw TEXT;
BEGIN
    -- Split the tag name and get the first part
    country_raw := split_part(tag_name, '-', 1);

    -- Check for the special case
    IF country_raw = 'UsVirginIslands' THEN
        RETURN 'US Virgin Islands';
    END IF;

    -- Replace camelCase with spaces using regex
    RETURN regexp_replace(country_raw, '([a-z])([A-Z])', '\1 \2', 'g');
END;
$$;


ALTER FUNCTION public.get_country_from_tag_name(tag_name text) OWNER TO geometa;

--
-- Name: map_group_location_update_modified(); Type: FUNCTION; Schema: public; Owner: geometa
--

CREATE FUNCTION public.map_group_location_update_modified() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    IF row(NEW.*) IS DISTINCT FROM row(OLD.*) THEN
        NEW.modified_at = EXTRACT(EPOCH FROM NOW())::int;
    END IF;
    RETURN NEW;
END;
$$;


ALTER FUNCTION public.map_group_location_update_modified() OWNER TO geometa;

SET default_tablespace = '';

SET default_table_access_method = heap;

--
-- Name: cache; Type: TABLE; Schema: public; Owner: geometa
--

CREATE TABLE public.cache (
    key text NOT NULL,
    value text NOT NULL
);


ALTER TABLE public.cache OWNER TO geometa;

--
-- Name: levels; Type: TABLE; Schema: public; Owner: geometa
--

CREATE TABLE public.levels (
    id bigint NOT NULL,
    map_group_id bigint NOT NULL,
    name text NOT NULL
);


ALTER TABLE public.levels OWNER TO geometa;

--
-- Name: levels_id_seq; Type: SEQUENCE; Schema: public; Owner: geometa
--

ALTER TABLE public.levels ALTER COLUMN id ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME public.levels_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Name: map_group_locations; Type: TABLE; Schema: public; Owner: geometa
--

CREATE TABLE public.map_group_locations (
    id bigint NOT NULL,
    map_group_id bigint NOT NULL,
    lat double precision,
    lng double precision,
    heading double precision NOT NULL,
    pitch double precision NOT NULL,
    zoom real NOT NULL,
    extra_tag text NOT NULL,
    extra_pano_id text,
    extra_pano_date text,
    pano_id text NOT NULL,
    updated_at bigint,
    modified_at bigint DEFAULT 1730419200 NOT NULL
);


ALTER TABLE public.map_group_locations OWNER TO geometa;

--
-- Name: metas; Type: TABLE; Schema: public; Owner: geometa
--

CREATE TABLE public.metas (
    id bigint NOT NULL,
    map_group_id bigint NOT NULL,
    tag_name text NOT NULL,
    name text NOT NULL,
    note text NOT NULL,
    note_from_plonkit boolean DEFAULT false NOT NULL,
    has_image boolean DEFAULT false NOT NULL,
    note_html text DEFAULT ''::text NOT NULL,
    modified_at bigint DEFAULT 1730419200 NOT NULL,
    footer text DEFAULT ''::text NOT NULL,
    footer_html text DEFAULT ''::text NOT NULL
);


ALTER TABLE public.metas OWNER TO geometa;

--
-- Name: location_metas_view; Type: VIEW; Schema: public; Owner: geometa
--

CREATE VIEW public.location_metas_view AS
 SELECT mgl.id,
    mgl.map_group_id,
    mgl.lat,
    mgl.lng,
    mgl.heading,
    mgl.pitch,
    mgl.zoom,
    mgl.extra_tag,
    mgl.extra_pano_id,
    mgl.extra_pano_date,
    mgl.pano_id,
    mgl.updated_at,
    mgl.modified_at,
    m.id AS meta_id,
    m.tag_name AS meta_tag_name,
    m.name AS meta_name,
    m.note AS meta_note,
    m.note_html AS meta_note_html,
    m.note_from_plonkit AS meta_note_from_plonkit,
    m.has_image AS meta_has_image,
    m.modified_at AS meta_modified_at
   FROM (public.map_group_locations mgl
     JOIN public.metas m ON (((m.tag_name = mgl.extra_tag) AND (m.map_group_id = mgl.map_group_id))));


ALTER VIEW public.location_metas_view OWNER TO geometa;

--
-- Name: map_data; Type: TABLE; Schema: public; Owner: geometa
--

CREATE TABLE public.map_data (
    id bigint NOT NULL,
    map_id bigint NOT NULL,
    last_updated_panoids text DEFAULT '[]'::text NOT NULL
);


ALTER TABLE public.map_data OWNER TO geometa;

--
-- Name: map_data_id_seq; Type: SEQUENCE; Schema: public; Owner: geometa
--

ALTER TABLE public.map_data ALTER COLUMN id ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME public.map_data_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Name: map_filters; Type: TABLE; Schema: public; Owner: geometa
--

CREATE TABLE public.map_filters (
    id bigint NOT NULL,
    map_id bigint NOT NULL,
    tag_like text,
    is_exclude boolean DEFAULT false NOT NULL
);


ALTER TABLE public.map_filters OWNER TO geometa;

--
-- Name: map_filters_id_seq; Type: SEQUENCE; Schema: public; Owner: geometa
--

ALTER TABLE public.map_filters ALTER COLUMN id ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME public.map_filters_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Name: map_group_locations_id_seq; Type: SEQUENCE; Schema: public; Owner: geometa
--

ALTER TABLE public.map_group_locations ALTER COLUMN id ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME public.map_group_locations_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Name: map_group_permissions; Type: TABLE; Schema: public; Owner: geometa
--

CREATE TABLE public.map_group_permissions (
    id bigint NOT NULL,
    map_group_id bigint NOT NULL,
    user_id text NOT NULL
);


ALTER TABLE public.map_group_permissions OWNER TO geometa;

--
-- Name: map_group_permissions_id_seq; Type: SEQUENCE; Schema: public; Owner: geometa
--

ALTER TABLE public.map_group_permissions ALTER COLUMN id ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME public.map_group_permissions_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Name: map_groups; Type: TABLE; Schema: public; Owner: geometa
--

CREATE TABLE public.map_groups (
    id bigint NOT NULL,
    name text NOT NULL,
    synced_at bigint
);


ALTER TABLE public.map_groups OWNER TO geometa;

--
-- Name: map_groups_id_seq; Type: SEQUENCE; Schema: public; Owner: geometa
--

ALTER TABLE public.map_groups ALTER COLUMN id ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME public.map_groups_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Name: map_levels; Type: TABLE; Schema: public; Owner: geometa
--

CREATE TABLE public.map_levels (
    id bigint NOT NULL,
    map_id bigint NOT NULL,
    level_id bigint NOT NULL
);


ALTER TABLE public.map_levels OWNER TO geometa;

--
-- Name: map_levels_id_seq; Type: SEQUENCE; Schema: public; Owner: geometa
--

ALTER TABLE public.map_levels ALTER COLUMN id ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME public.map_levels_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Name: maps; Type: TABLE; Schema: public; Owner: geometa
--

CREATE TABLE public.maps (
    id bigint NOT NULL,
    map_group_id bigint,
    name text NOT NULL,
    geoguessr_id text NOT NULL,
    description text,
    is_published boolean DEFAULT false NOT NULL,
    ordering bigint DEFAULT 0 NOT NULL,
    auto_update boolean DEFAULT false NOT NULL,
    authors text DEFAULT ''::text,
    modified_at bigint DEFAULT 1730419200 NOT NULL,
    footer text DEFAULT ''::text NOT NULL,
    footer_html text DEFAULT ''::text NOT NULL,
    difficulty bigint DEFAULT 0 NOT NULL,
    is_verified boolean DEFAULT false NOT NULL,
    number_of_games_played bigint,
    number_of_games_played_diminished bigint,
    is_personal boolean DEFAULT false NOT NULL,
    user_id text,
    is_shared boolean DEFAULT false NOT NULL,
    CONSTRAINT map_group_id_not_null CHECK (((is_personal AND (map_group_id IS NULL)) OR ((NOT is_personal) AND (map_group_id IS NOT NULL))))
);


ALTER TABLE public.maps OWNER TO geometa;

--
-- Name: meta_levels; Type: TABLE; Schema: public; Owner: geometa
--

CREATE TABLE public.meta_levels (
    id bigint NOT NULL,
    meta_id bigint NOT NULL,
    level_id bigint NOT NULL
);


ALTER TABLE public.meta_levels OWNER TO geometa;

--
-- Name: map_locations_view; Type: VIEW; Schema: public; Owner: geometa
--

CREATE VIEW public.map_locations_view AS
 WITH maps_with_levels AS (
         SELECT map_levels.map_id
           FROM public.map_levels
          GROUP BY map_levels.map_id
        ), map_meta_levels AS (
         SELECT ml.map_id,
            me.meta_id
           FROM (public.map_levels ml
             JOIN public.meta_levels me ON ((me.level_id = ml.level_id)))
          GROUP BY ml.map_id, me.meta_id
        ), maps_with_includes AS (
         SELECT map_filters.map_id
           FROM public.map_filters
          WHERE (map_filters.is_exclude = false)
          GROUP BY map_filters.map_id
        ), possible_includes AS (
         SELECT mf.map_id,
            mf.tag_like
           FROM public.map_filters mf
          WHERE (mf.is_exclude = false)
          GROUP BY mf.map_id, mf.tag_like
        ), possible_excludes AS (
         SELECT mf.map_id,
            mf.tag_like
           FROM public.map_filters mf
          WHERE (mf.is_exclude = true)
          GROUP BY mf.map_id, mf.tag_like
        )
 SELECT m.id AS map_id,
    lmv.lat,
    lmv.lng,
    lmv.heading,
    lmv.pitch,
    lmv.zoom,
    lmv.pano_id,
    lmv.meta_name,
    lmv.extra_pano_id,
    lmv.extra_pano_date,
    lmv.extra_tag AS tag_name,
    lmv.meta_note,
    lmv.meta_note_html,
    lmv.meta_note_from_plonkit,
    lmv.meta_id,
    lmv.modified_at,
    lmv.meta_modified_at,
    m.modified_at AS map_modified_at
   FROM ((((((public.location_metas_view lmv
     JOIN public.maps m ON ((m.map_group_id = lmv.map_group_id)))
     LEFT JOIN maps_with_levels mwl ON ((mwl.map_id = m.id)))
     LEFT JOIN map_meta_levels mml ON (((mml.map_id = m.id) AND (mml.meta_id = lmv.meta_id))))
     LEFT JOIN maps_with_includes mwi ON ((mwi.map_id = m.id)))
     LEFT JOIN possible_includes pi ON (((pi.map_id = m.id) AND (lmv.extra_tag ~~* pi.tag_like))))
     LEFT JOIN possible_excludes pe ON (((pe.map_id = m.id) AND (lmv.extra_tag ~~* pe.tag_like))))
  WHERE (((mml.meta_id IS NOT NULL) OR (mwl.map_id IS NULL)) AND ((pi.map_id IS NOT NULL) OR (mwi.map_id IS NULL)) AND (pe.map_id IS NULL));


ALTER VIEW public.map_locations_view OWNER TO geometa;

--
-- Name: map_metas_view; Type: VIEW; Schema: public; Owner: geometa
--

CREATE VIEW public.map_metas_view AS
SELECT
    NULL::text AS geoguessr_id,
    NULL::bigint AS map_id,
    NULL::text AS map_name,
    NULL::text AS map_footer_html,
    NULL::text AS meta_name,
    NULL::text AS meta_tag,
    NULL::text AS meta_note_html,
    NULL::text AS meta_footer_html,
    NULL::boolean AS meta_note_from_plonkit,
    NULL::text AS meta_image_urls;


ALTER VIEW public.map_metas_view OWNER TO geometa;

--
-- Name: map_regions; Type: TABLE; Schema: public; Owner: geometa
--

CREATE TABLE public.map_regions (
    id bigint NOT NULL,
    map_id bigint NOT NULL,
    region_id bigint NOT NULL
);


ALTER TABLE public.map_regions OWNER TO geometa;

--
-- Name: map_regions_id_seq; Type: SEQUENCE; Schema: public; Owner: geometa
--

ALTER TABLE public.map_regions ALTER COLUMN id ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME public.map_regions_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Name: maps_id_seq; Type: SEQUENCE; Schema: public; Owner: geometa
--

ALTER TABLE public.maps ALTER COLUMN id ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME public.maps_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Name: meta_images; Type: TABLE; Schema: public; Owner: geometa
--

CREATE TABLE public.meta_images (
    id bigint NOT NULL,
    meta_id bigint NOT NULL,
    image_url text NOT NULL,
    "order" integer DEFAULT 0 NOT NULL
);


ALTER TABLE public.meta_images OWNER TO geometa;

--
-- Name: meta_images_id_seq; Type: SEQUENCE; Schema: public; Owner: geometa
--

ALTER TABLE public.meta_images ALTER COLUMN id ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME public.meta_images_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Name: meta_levels_id_seq; Type: SEQUENCE; Schema: public; Owner: geometa
--

ALTER TABLE public.meta_levels ALTER COLUMN id ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME public.meta_levels_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Name: meta_locations_count_view; Type: VIEW; Schema: public; Owner: geometa
--

CREATE VIEW public.meta_locations_count_view AS
 SELECT meta_id,
    count(*) AS total
   FROM public.location_metas_view
  GROUP BY meta_id;


ALTER VIEW public.meta_locations_count_view OWNER TO geometa;

--
-- Name: meta_suggestions; Type: TABLE; Schema: public; Owner: geometa
--

CREATE TABLE public.meta_suggestions (
    id bigint NOT NULL,
    secret text NOT NULL,
    url text NOT NULL,
    description text NOT NULL,
    author_nickname text,
    status text DEFAULT 'new'::text
);


ALTER TABLE public.meta_suggestions OWNER TO geometa;

--
-- Name: meta_suggestions_id_seq; Type: SEQUENCE; Schema: public; Owner: geometa
--

ALTER TABLE public.meta_suggestions ALTER COLUMN id ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME public.meta_suggestions_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Name: metas_id_seq; Type: SEQUENCE; Schema: public; Owner: geometa
--

ALTER TABLE public.metas ALTER COLUMN id ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME public.metas_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Name: regions; Type: TABLE; Schema: public; Owner: geometa
--

CREATE TABLE public.regions (
    id bigint NOT NULL,
    name text NOT NULL,
    ordering bigint DEFAULT 0 NOT NULL
);


ALTER TABLE public.regions OWNER TO geometa;

--
-- Name: regions_id_seq; Type: SEQUENCE; Schema: public; Owner: geometa
--

ALTER TABLE public.regions ALTER COLUMN id ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME public.regions_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Name: session; Type: TABLE; Schema: public; Owner: geometa
--

CREATE TABLE public.session (
    id text NOT NULL,
    user_id text NOT NULL,
    expires_at timestamp with time zone NOT NULL
);


ALTER TABLE public.session OWNER TO geometa;

--
-- Name: synced_locations; Type: TABLE; Schema: public; Owner: geometa
--

CREATE TABLE public.synced_locations (
    synced_meta_id bigint NOT NULL,
    pano_id text NOT NULL,
    country text,
    lat real NOT NULL,
    lng real NOT NULL,
    heading real NOT NULL,
    pitch real NOT NULL,
    zoom real NOT NULL,
    extra_tag text NOT NULL,
    extra_pano_id text,
    extra_pano_date text
);


ALTER TABLE public.synced_locations OWNER TO geometa;

--
-- Name: synced_map_metas; Type: TABLE; Schema: public; Owner: geometa
--

CREATE TABLE public.synced_map_metas (
    map_id bigint NOT NULL,
    synced_meta_id bigint NOT NULL
);


ALTER TABLE public.synced_map_metas OWNER TO geometa;

--
-- Name: synced_metas; Type: TABLE; Schema: public; Owner: geometa
--

CREATE TABLE public.synced_metas (
    meta_id bigint NOT NULL,
    map_group_id bigint NOT NULL,
    name text NOT NULL,
    note text NOT NULL,
    note_from_plonkit boolean NOT NULL,
    footer text NOT NULL,
    images text[] NOT NULL
);


ALTER TABLE public.synced_metas OWNER TO geometa;

--
-- Name: user; Type: TABLE; Schema: public; Owner: geometa
--

CREATE TABLE public."user" (
    id text NOT NULL,
    username text NOT NULL,
    is_trusted boolean DEFAULT false NOT NULL,
    is_superadmin boolean DEFAULT false NOT NULL,
    api_token text
);


ALTER TABLE public."user" OWNER TO geometa;

--
-- Data for Name: cache; Type: TABLE DATA; Schema: public; Owner: geometa
--

COPY public.cache (key, value) FROM stdin;
queries:mapsPage	{"regionsList":[{"id":1,"name":"World","ordering":0},{"id":2,"name":"Europe","ordering":1},{"id":3,"name":"Asia","ordering":2},{"id":4,"name":"South America","ordering":3},{"id":5,"name":"North America","ordering":4},{"id":6,"name":"Oceania","ordering":5},{"id":7,"name":"Africa","ordering":6}],"allMaps":[{"id":1,"mapGroupId":1,"name":"test map","geoguessrId":"test-id","description":"test","isPublished":true,"isShared":true,"isPersonal":false,"userId":null,"authors":"test user","ordering":0,"autoUpdate":false,"footer":"","footerHtml":"","modifiedAt":1761430590,"difficulty":2,"isVerified":false,"numberOfGamesPlayed":null,"numberOfGamesPlayedDiminished":null,"locationsCount":"30","regions":"Asia, World","metasCount":"3"}]}
\.


--
-- Data for Name: levels; Type: TABLE DATA; Schema: public; Owner: geometa
--

COPY public.levels (id, map_group_id, name) FROM stdin;
1	1	Beginner
\.


--
-- Data for Name: map_data; Type: TABLE DATA; Schema: public; Owner: geometa
--

COPY public.map_data (id, map_id, last_updated_panoids) FROM stdin;
\.


--
-- Data for Name: map_filters; Type: TABLE DATA; Schema: public; Owner: geometa
--

COPY public.map_filters (id, map_id, tag_like, is_exclude) FROM stdin;
\.


--
-- Data for Name: map_group_locations; Type: TABLE DATA; Schema: public; Owner: geometa
--

COPY public.map_group_locations (id, map_group_id, lat, lng, heading, pitch, zoom, extra_tag, extra_pano_id, extra_pano_date, pano_id, updated_at, modified_at) FROM stdin;
1	1	41.02582248751939	20.63524263040672	188.65105	0	0	Albania-Rifts	\N	2016-06	lyIA3O9kVDPw7X2J_DoLEQ	1761430344	1761430344
2	1	41.51481491344927	20.330896749202665	70.80564	0	0	Albania-Rifts	\N	2016-06	q4OCemVg7g6IHaIJY3pvXg	1761430344	1761430344
3	1	40.65755165043083	20.74296620552738	324.47495	0	0	Albania-Rifts	\N	2016-06	x7s13FOZugOFo0AHNbh9Vw	1761430344	1761430344
4	1	41.53026959253806	20.08027928851625	335.02682	0	0	Albania-Rifts	\N	2016-06	eeepR_BSrI8XNtQw9SquxA	1761430344	1761430344
5	1	40.7135798806795	20.358661889017323	235.62039	0	0	Albania-Rifts	\N	2016-06	wt-20eUrKuhQqFflNGV3tQ	1761430344	1761430344
6	1	40.502318988631096	20.68568052998642	3.0840516	0	0	Albania-Rifts	\N	2016-06	6JWDJHWx59pOMF5QgF3nGQ	1761430344	1761430344
7	1	42.0334196437829	20.301021099921577	60.16217	0	0	Albania-Rifts	\N	2016-06	14Um0spr6U5-6iruufjImQ	1761430344	1761430344
8	1	41.79975946805962	19.891962637327445	65.157524	0	0	Albania-Rifts	\N	2016-06	8V6Lepq1jv9GbWr_TQpgeg	1761430344	1761430344
9	1	40.25878272372929	19.52643849800931	140.8472	0	0	Albania-Rifts	\N	2016-05	eHYlUmt-D00MJUNcSkhCPA	1761430344	1761430344
10	1	40.33268367146456	20.175221691604875	4.24793	0	0	Albania-Rifts	\N	2016-06	iLWf8fpj5JpHR1lZ4_kqcg	1761430344	1761430344
11	1	42.53430452337192	1.593850729118759	243.00035	0	0	Andorra-Architecture	\N	2014-10	eK91C-71mFmskHgXDZli8g	1761430344	1761430344
12	1	42.486264891864366	1.4902315137057178	34.746918	0	0	Andorra-Architecture	\N	2014-10	Eiyc5eGsDqvZOYbyAPxfXA	1761430344	1761430344
13	1	42.55341820644178	1.5905667102254302	160.37477	0	0	Andorra-Architecture	\N	2014-10	GC9G88_1ctywys3hqQLPnA	1761430344	1761430344
14	1	42.56957043667741	1.5993300776312092	338.51566	0	0	Andorra-Architecture	\N	2014-10	QW7MJ0TU2ngjb5nuK8QAww	1761430344	1761430344
15	1	42.58079167118225	1.6516730757783162	309.2011	0	0	Andorra-Architecture	\N	2014-10	QMMuU3n_FYQo2ObrVlkSig	1761430344	1761430344
16	1	42.54860588953037	1.5151532829093226	106.093155	0	0	Andorra-Architecture	\N	2014-10	_5oq_EIEwIQ08K8wJH12Kg	1761430344	1761430344
17	1	42.565893718501066	1.602899207309226	214.31638	0	0	Andorra-Architecture	\N	2014-10	UkSXD-lFScWCU9VO4AXzPw	1761430344	1761430344
18	1	42.53204995310254	1.5127207528468416	295.18286	0	0	Andorra-Architecture	\N	2014-10	wYPUfn7WNeA_LhbaHNKGzw	1761430344	1761430344
19	1	42.574289210472905	1.5196412656860998	218.42299	0	0	Andorra-Architecture	\N	2014-10	lGOVBS5I2kNOYbpYlUGOPw	1761430344	1761430344
20	1	42.4619808079997	1.4980384688992177	67.37049	0	0	Andorra-Architecture	\N	2014-10	xzgWIIZAM6_6gKaQf8dRnQ	1761430344	1761430344
21	1	-14.331613857813702	-170.81818357751197	153.8196	0	0	AmericanSamoa-CarMetaUnique	\N	2014-05	6PC57MHdu6maj6Os8yfBkw	1761430344	1761430344
22	1	-14.323816451319756	-170.74337921123495	62.78132	0	0	AmericanSamoa-CarMetaUnique	\N	2014-05	YN6z84OIGib1Mec0xI2x-Q	1761430344	1761430344
23	1	-14.336286059940562	-170.7252196532933	63.004597	0	0	AmericanSamoa-CarMetaUnique	\N	2014-05	bipcffIZcFG9JziGqmsMeg	1761430344	1761430344
24	1	-14.280620189479713	-170.70887007514787	196.6258	0	0	AmericanSamoa-CarMetaUnique	\N	2014-05	941xeZc5-Q9Foa7i-kTayw	1761430344	1761430344
25	1	-14.271222827025335	-170.60668485491945	20.900282	0	0	AmericanSamoa-CarMetaUnique	\N	2014-05	eYD_olnpFnzLcok-Gna0mw	1761430344	1761430344
26	1	-14.267692008812777	-170.67804865317896	94.14546	0	0	AmericanSamoa-CarMetaUnique	\N	2014-05	RA2hKfUEWY--HEgf5r1ADw	1761430344	1761430344
27	1	-14.299770304051698	-170.68047746599038	137.58226	0	0	AmericanSamoa-CarMetaUnique	\N	2014-05	Hik3SxRn5fvOCqAeYd6_Pg	1761430344	1761430344
28	1	-14.249925543633552	-170.6693303306023	233.3547	0	0	AmericanSamoa-CarMetaUnique	\N	2014-05	yVr_t2lcgG-_vvV_axkyew	1761430344	1761430344
29	1	-14.301554670884554	-170.8140740746637	280.46124	0	0	AmericanSamoa-CarMetaUnique	\N	2014-05	xcDJD3zf435CoFiHCO7sqg	1761430344	1761430344
30	1	-14.25545305650964	-170.56418838964302	329.81042	0	0	AmericanSamoa-CarMetaUnique	\N	2014-05	gY05TTzQieydrruF4CU0Tg	1761430344	1761430344
\.


--
-- Data for Name: map_group_permissions; Type: TABLE DATA; Schema: public; Owner: geometa
--

COPY public.map_group_permissions (id, map_group_id, user_id) FROM stdin;
1	1	1001
\.


--
-- Data for Name: map_groups; Type: TABLE DATA; Schema: public; Owner: geometa
--

COPY public.map_groups (id, name, synced_at) FROM stdin;
1	test	\N
\.


--
-- Data for Name: map_levels; Type: TABLE DATA; Schema: public; Owner: geometa
--

COPY public.map_levels (id, map_id, level_id) FROM stdin;
\.


--
-- Data for Name: map_regions; Type: TABLE DATA; Schema: public; Owner: geometa
--

COPY public.map_regions (id, map_id, region_id) FROM stdin;
1	1	1
3	1	3
\.


--
-- Data for Name: maps; Type: TABLE DATA; Schema: public; Owner: geometa
--

COPY public.maps (id, map_group_id, name, geoguessr_id, description, is_published, ordering, auto_update, authors, modified_at, footer, footer_html, difficulty, is_verified, number_of_games_played, number_of_games_played_diminished, is_personal, user_id, is_shared) FROM stdin;
1	1	test map	test-id	test	t	0	f	test user	1761430590			2	f	\N	\N	f	\N	t
\.


--
-- Data for Name: meta_images; Type: TABLE DATA; Schema: public; Owner: geometa
--

COPY public.meta_images (id, meta_id, image_url, "order") FROM stdin;
1	1	https://learnablemeta.com/images/shc7R5Y5ubU3GHXh8cMMb2mrxmy7KsvnyQDM.avif	0
2	2	https://learnablemeta.com/images/ICZmzzTbc40N6awXnImGdEfQaMHhQPWDu7Ob.avif	0
3	3	https://learnablemeta.com/images/oZSYTgy8eQTZGQSHo1sPZCHgrhSR3JwhOHir.avif	0
\.


--
-- Data for Name: meta_levels; Type: TABLE DATA; Schema: public; Owner: geometa
--

COPY public.meta_levels (id, meta_id, level_id) FROM stdin;
1	1	1
2	2	1
3	3	1
\.


--
-- Data for Name: meta_suggestions; Type: TABLE DATA; Schema: public; Owner: geometa
--

COPY public.meta_suggestions (id, secret, url, description, author_nickname, status) FROM stdin;
\.


--
-- Data for Name: metas; Type: TABLE DATA; Schema: public; Owner: geometa
--

COPY public.metas (id, map_group_id, tag_name, name, note, note_from_plonkit, has_image, note_html, modified_at, footer, footer_html) FROM stdin;
1	1	Albania-Rifts	Rifts	If you look up and see a "rift" in the sky, this glitch is most commonly found in Albania or Montenegro within Europe. Most of the time, you will see it, but if you don’t, don’t rule out these countries.	f	f	<p>If you look up and see a "rift" in the sky, this glitch is most commonly found in Albania or Montenegro within Europe. Most of the time, you will see it, but if you don’t, don’t rule out these countries.</p>	1761430375		
2	1	Andorra-Architecture	Stone buildings	Andorra has a lot of these distinct stone buildings, visible almost everywhere in the country.\n\nThese buildings can also be found near Andorra, in the French and Spanish Pyrenees. 	f	f	<p>Andorra has a lot of these distinct stone buildings, visible almost everywhere in the country.</p>\n<p>These buildings can also be found near Andorra, in the French and Spanish Pyrenees.</p>	1761430375		
3	1	AmericanSamoa-CarMetaUnique	Unique car	If you see a Street View car with a slightly rusted black truck bed, you know you're in American Samoa.	f	f	<p>If you see a Street View car with a slightly rusted black truck bed, you know you're in American Samoa.</p>	1761430375		
\.


--
-- Data for Name: regions; Type: TABLE DATA; Schema: public; Owner: geometa
--

COPY public.regions (id, name, ordering) FROM stdin;
1	World	0
2	Europe	1
3	Asia	2
4	South America	3
5	North America	4
6	Oceania	5
7	Africa	6
\.


--
-- Data for Name: session; Type: TABLE DATA; Schema: public; Owner: geometa
--

COPY public.session (id, user_id, expires_at) FROM stdin;
pmqdibpro7furk5illb4pzsqmgio23ypgq2yyfza	1001	2025-11-24 22:10:35.003+00
\.


--
-- Data for Name: synced_locations; Type: TABLE DATA; Schema: public; Owner: geometa
--

COPY public.synced_locations (synced_meta_id, pano_id, country, lat, lng, heading, pitch, zoom, extra_tag, extra_pano_id, extra_pano_date) FROM stdin;
\.


--
-- Data for Name: synced_map_metas; Type: TABLE DATA; Schema: public; Owner: geometa
--

COPY public.synced_map_metas (map_id, synced_meta_id) FROM stdin;
\.


--
-- Data for Name: synced_metas; Type: TABLE DATA; Schema: public; Owner: geometa
--

COPY public.synced_metas (meta_id, map_group_id, name, note, note_from_plonkit, footer, images) FROM stdin;
\.


--
-- Data for Name: user; Type: TABLE DATA; Schema: public; Owner: geometa
--

COPY public."user" (id, username, is_trusted, is_superadmin, api_token) FROM stdin;
1001	demo	t	t	\N
\.


--
-- Name: levels_id_seq; Type: SEQUENCE SET; Schema: public; Owner: geometa
--

SELECT pg_catalog.setval('public.levels_id_seq', 1, true);


--
-- Name: map_data_id_seq; Type: SEQUENCE SET; Schema: public; Owner: geometa
--

SELECT pg_catalog.setval('public.map_data_id_seq', 1, false);


--
-- Name: map_filters_id_seq; Type: SEQUENCE SET; Schema: public; Owner: geometa
--

SELECT pg_catalog.setval('public.map_filters_id_seq', 1, false);


--
-- Name: map_group_locations_id_seq; Type: SEQUENCE SET; Schema: public; Owner: geometa
--

SELECT pg_catalog.setval('public.map_group_locations_id_seq', 30, true);


--
-- Name: map_group_permissions_id_seq; Type: SEQUENCE SET; Schema: public; Owner: geometa
--

SELECT pg_catalog.setval('public.map_group_permissions_id_seq', 1, true);


--
-- Name: map_groups_id_seq; Type: SEQUENCE SET; Schema: public; Owner: geometa
--

SELECT pg_catalog.setval('public.map_groups_id_seq', 1, true);


--
-- Name: map_levels_id_seq; Type: SEQUENCE SET; Schema: public; Owner: geometa
--

SELECT pg_catalog.setval('public.map_levels_id_seq', 1, false);


--
-- Name: map_regions_id_seq; Type: SEQUENCE SET; Schema: public; Owner: geometa
--

SELECT pg_catalog.setval('public.map_regions_id_seq', 3, true);


--
-- Name: maps_id_seq; Type: SEQUENCE SET; Schema: public; Owner: geometa
--

SELECT pg_catalog.setval('public.maps_id_seq', 1, true);


--
-- Name: meta_images_id_seq; Type: SEQUENCE SET; Schema: public; Owner: geometa
--

SELECT pg_catalog.setval('public.meta_images_id_seq', 3, true);


--
-- Name: meta_levels_id_seq; Type: SEQUENCE SET; Schema: public; Owner: geometa
--

SELECT pg_catalog.setval('public.meta_levels_id_seq', 3, true);


--
-- Name: meta_suggestions_id_seq; Type: SEQUENCE SET; Schema: public; Owner: geometa
--

SELECT pg_catalog.setval('public.meta_suggestions_id_seq', 1, false);


--
-- Name: metas_id_seq; Type: SEQUENCE SET; Schema: public; Owner: geometa
--

SELECT pg_catalog.setval('public.metas_id_seq', 6, true);


--
-- Name: regions_id_seq; Type: SEQUENCE SET; Schema: public; Owner: geometa
--

SELECT pg_catalog.setval('public.regions_id_seq', 7, true);


--
-- Name: cache cache_pkey; Type: CONSTRAINT; Schema: public; Owner: geometa
--

ALTER TABLE ONLY public.cache
    ADD CONSTRAINT cache_pkey PRIMARY KEY (key);


--
-- Name: levels levels_pkey; Type: CONSTRAINT; Schema: public; Owner: geometa
--

ALTER TABLE ONLY public.levels
    ADD CONSTRAINT levels_pkey PRIMARY KEY (id);


--
-- Name: map_data map_data_pkey; Type: CONSTRAINT; Schema: public; Owner: geometa
--

ALTER TABLE ONLY public.map_data
    ADD CONSTRAINT map_data_pkey PRIMARY KEY (id);


--
-- Name: map_filters map_filters_pkey; Type: CONSTRAINT; Schema: public; Owner: geometa
--

ALTER TABLE ONLY public.map_filters
    ADD CONSTRAINT map_filters_pkey PRIMARY KEY (id);


--
-- Name: map_group_locations map_group_locations_pkey; Type: CONSTRAINT; Schema: public; Owner: geometa
--

ALTER TABLE ONLY public.map_group_locations
    ADD CONSTRAINT map_group_locations_pkey PRIMARY KEY (id);


--
-- Name: map_group_permissions map_group_permissions_pkey; Type: CONSTRAINT; Schema: public; Owner: geometa
--

ALTER TABLE ONLY public.map_group_permissions
    ADD CONSTRAINT map_group_permissions_pkey PRIMARY KEY (id);


--
-- Name: map_groups map_groups_pkey; Type: CONSTRAINT; Schema: public; Owner: geometa
--

ALTER TABLE ONLY public.map_groups
    ADD CONSTRAINT map_groups_pkey PRIMARY KEY (id);


--
-- Name: map_levels map_levels_pkey; Type: CONSTRAINT; Schema: public; Owner: geometa
--

ALTER TABLE ONLY public.map_levels
    ADD CONSTRAINT map_levels_pkey PRIMARY KEY (id);


--
-- Name: map_regions map_regions_pkey; Type: CONSTRAINT; Schema: public; Owner: geometa
--

ALTER TABLE ONLY public.map_regions
    ADD CONSTRAINT map_regions_pkey PRIMARY KEY (id);


--
-- Name: maps maps_geoguessr_id_unique; Type: CONSTRAINT; Schema: public; Owner: geometa
--

ALTER TABLE ONLY public.maps
    ADD CONSTRAINT maps_geoguessr_id_unique UNIQUE (geoguessr_id);


--
-- Name: maps maps_pkey; Type: CONSTRAINT; Schema: public; Owner: geometa
--

ALTER TABLE ONLY public.maps
    ADD CONSTRAINT maps_pkey PRIMARY KEY (id);


--
-- Name: meta_images meta_images_pkey; Type: CONSTRAINT; Schema: public; Owner: geometa
--

ALTER TABLE ONLY public.meta_images
    ADD CONSTRAINT meta_images_pkey PRIMARY KEY (id);


--
-- Name: meta_levels meta_levels_pkey; Type: CONSTRAINT; Schema: public; Owner: geometa
--

ALTER TABLE ONLY public.meta_levels
    ADD CONSTRAINT meta_levels_pkey PRIMARY KEY (id);


--
-- Name: meta_suggestions meta_suggestions_pkey; Type: CONSTRAINT; Schema: public; Owner: geometa
--

ALTER TABLE ONLY public.meta_suggestions
    ADD CONSTRAINT meta_suggestions_pkey PRIMARY KEY (id);


--
-- Name: metas metas_pkey; Type: CONSTRAINT; Schema: public; Owner: geometa
--

ALTER TABLE ONLY public.metas
    ADD CONSTRAINT metas_pkey PRIMARY KEY (id);


--
-- Name: regions regions_pkey; Type: CONSTRAINT; Schema: public; Owner: geometa
--

ALTER TABLE ONLY public.regions
    ADD CONSTRAINT regions_pkey PRIMARY KEY (id);


--
-- Name: session session_pkey; Type: CONSTRAINT; Schema: public; Owner: geometa
--

ALTER TABLE ONLY public.session
    ADD CONSTRAINT session_pkey PRIMARY KEY (id);


--
-- Name: synced_locations synced_locations_synced_meta_id_pano_id_pk; Type: CONSTRAINT; Schema: public; Owner: geometa
--

ALTER TABLE ONLY public.synced_locations
    ADD CONSTRAINT synced_locations_synced_meta_id_pano_id_pk PRIMARY KEY (synced_meta_id, pano_id);


--
-- Name: synced_map_metas synced_map_metas_map_id_synced_meta_id_pk; Type: CONSTRAINT; Schema: public; Owner: geometa
--

ALTER TABLE ONLY public.synced_map_metas
    ADD CONSTRAINT synced_map_metas_map_id_synced_meta_id_pk PRIMARY KEY (map_id, synced_meta_id);


--
-- Name: synced_metas synced_metas_pkey; Type: CONSTRAINT; Schema: public; Owner: geometa
--

ALTER TABLE ONLY public.synced_metas
    ADD CONSTRAINT synced_metas_pkey PRIMARY KEY (meta_id);


--
-- Name: user user_api_token_unique; Type: CONSTRAINT; Schema: public; Owner: geometa
--

ALTER TABLE ONLY public."user"
    ADD CONSTRAINT user_api_token_unique UNIQUE (api_token);


--
-- Name: user user_pkey; Type: CONSTRAINT; Schema: public; Owner: geometa
--

ALTER TABLE ONLY public."user"
    ADD CONSTRAINT user_pkey PRIMARY KEY (id);


--
-- Name: levels_unique; Type: INDEX; Schema: public; Owner: geometa
--

CREATE UNIQUE INDEX levels_unique ON public.levels USING btree (name, map_group_id);


--
-- Name: map_data_unique; Type: INDEX; Schema: public; Owner: geometa
--

CREATE UNIQUE INDEX map_data_unique ON public.map_data USING btree (map_id);


--
-- Name: map_filters_unique; Type: INDEX; Schema: public; Owner: geometa
--

CREATE UNIQUE INDEX map_filters_unique ON public.map_filters USING btree (map_id, tag_like);


--
-- Name: map_group_locations_map_group_modified_idx; Type: INDEX; Schema: public; Owner: geometa
--

CREATE INDEX map_group_locations_map_group_modified_idx ON public.map_group_locations USING btree (map_group_id, modified_at);


--
-- Name: map_group_locations_map_group_tag_idx; Type: INDEX; Schema: public; Owner: geometa
--

CREATE INDEX map_group_locations_map_group_tag_idx ON public.map_group_locations USING btree (map_group_id, extra_tag);


--
-- Name: map_group_locations_unique; Type: INDEX; Schema: public; Owner: geometa
--

CREATE UNIQUE INDEX map_group_locations_unique ON public.map_group_locations USING btree (map_group_id, pano_id);


--
-- Name: map_group_permissions_unique; Type: INDEX; Schema: public; Owner: geometa
--

CREATE UNIQUE INDEX map_group_permissions_unique ON public.map_group_permissions USING btree (map_group_id, user_id);


--
-- Name: map_levels_unique; Type: INDEX; Schema: public; Owner: geometa
--

CREATE UNIQUE INDEX map_levels_unique ON public.map_levels USING btree (map_id, level_id);


--
-- Name: map_region_unique; Type: INDEX; Schema: public; Owner: geometa
--

CREATE UNIQUE INDEX map_region_unique ON public.map_regions USING btree (map_id, region_id);


--
-- Name: maps_map_group_modified_idx; Type: INDEX; Schema: public; Owner: geometa
--

CREATE INDEX maps_map_group_modified_idx ON public.maps USING btree (map_group_id, modified_at);


--
-- Name: meta_image_unique; Type: INDEX; Schema: public; Owner: geometa
--

CREATE UNIQUE INDEX meta_image_unique ON public.meta_images USING btree (meta_id, image_url);


--
-- Name: meta_levels_unique; Type: INDEX; Schema: public; Owner: geometa
--

CREATE UNIQUE INDEX meta_levels_unique ON public.meta_levels USING btree (meta_id, level_id);


--
-- Name: metas_map_group_modified_idx; Type: INDEX; Schema: public; Owner: geometa
--

CREATE INDEX metas_map_group_modified_idx ON public.metas USING btree (map_group_id, modified_at);


--
-- Name: metas_unique; Type: INDEX; Schema: public; Owner: geometa
--

CREATE UNIQUE INDEX metas_unique ON public.metas USING btree (map_group_id, tag_name);


--
-- Name: smm_meta_id_inc_map_idx; Type: INDEX; Schema: public; Owner: geometa
--

CREATE INDEX smm_meta_id_inc_map_idx ON public.synced_map_metas USING btree (synced_meta_id) INCLUDE (map_id);


--
-- Name: map_metas_view _RETURN; Type: RULE; Schema: public; Owner: geometa
--

CREATE OR REPLACE VIEW public.map_metas_view AS
 SELECT m.geoguessr_id,
    m.id AS map_id,
    m.name AS map_name,
    m.footer_html AS map_footer_html,
    metas.name AS meta_name,
    metas.tag_name AS meta_tag,
    metas.note_html AS meta_note_html,
    metas.footer_html AS meta_footer_html,
    metas.note_from_plonkit AS meta_note_from_plonkit,
    ( SELECT string_agg(mi.image_url, ','::text ORDER BY mi.id) AS string_agg
           FROM public.meta_images mi
          WHERE (mi.meta_id = metas.id)) AS meta_image_urls
   FROM (public.maps m
     JOIN public.metas ON ((metas.map_group_id = m.map_group_id)))
  WHERE (((EXISTS ( SELECT 1
           FROM (public.map_levels
             JOIN public.meta_levels ON (((meta_levels.level_id = map_levels.level_id) AND (meta_levels.meta_id = metas.id))))
          WHERE (map_levels.map_id = m.id))) OR (NOT (EXISTS ( SELECT 1
           FROM public.map_levels
          WHERE (map_levels.map_id = m.id))))) AND ((EXISTS ( SELECT 1
           FROM public.map_filters mf
          WHERE ((mf.map_id = m.id) AND (mf.is_exclude = false) AND (metas.tag_name ~~* mf.tag_like)))) OR (NOT (EXISTS ( SELECT 1
           FROM public.map_filters mf
          WHERE ((mf.map_id = m.id) AND (mf.is_exclude = false)))))) AND (NOT (EXISTS ( SELECT 1
           FROM public.map_filters mf
          WHERE ((mf.map_id = m.id) AND (mf.is_exclude = true) AND (metas.tag_name ~~* mf.tag_like))))))
  GROUP BY m.geoguessr_id, m.id, m.name, m.footer_html, metas.id, metas.name, metas.tag_name, metas.note_html, metas.footer_html;


--
-- Name: map_group_locations trigger_update_modified; Type: TRIGGER; Schema: public; Owner: geometa
--

CREATE TRIGGER trigger_update_modified BEFORE UPDATE ON public.map_group_locations FOR EACH ROW WHEN ((old.* IS DISTINCT FROM new.*)) EXECUTE FUNCTION public.map_group_location_update_modified();


--
-- Name: levels levels_map_group_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: geometa
--

ALTER TABLE ONLY public.levels
    ADD CONSTRAINT levels_map_group_id_fkey FOREIGN KEY (map_group_id) REFERENCES public.map_groups(id) ON DELETE CASCADE;


--
-- Name: map_data map_data_map_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: geometa
--

ALTER TABLE ONLY public.map_data
    ADD CONSTRAINT map_data_map_id_fkey FOREIGN KEY (map_id) REFERENCES public.maps(id) ON DELETE CASCADE;


--
-- Name: map_filters map_filters_map_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: geometa
--

ALTER TABLE ONLY public.map_filters
    ADD CONSTRAINT map_filters_map_id_fkey FOREIGN KEY (map_id) REFERENCES public.maps(id) ON DELETE CASCADE;


--
-- Name: map_group_locations map_group_locations_map_group_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: geometa
--

ALTER TABLE ONLY public.map_group_locations
    ADD CONSTRAINT map_group_locations_map_group_id_fkey FOREIGN KEY (map_group_id) REFERENCES public.map_groups(id) ON DELETE CASCADE;


--
-- Name: map_group_permissions map_group_permissions_map_group_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: geometa
--

ALTER TABLE ONLY public.map_group_permissions
    ADD CONSTRAINT map_group_permissions_map_group_id_fkey FOREIGN KEY (map_group_id) REFERENCES public.map_groups(id) ON DELETE CASCADE;


--
-- Name: map_group_permissions map_group_permissions_user_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: geometa
--

ALTER TABLE ONLY public.map_group_permissions
    ADD CONSTRAINT map_group_permissions_user_id_fkey FOREIGN KEY (user_id) REFERENCES public."user"(id) ON DELETE CASCADE;


--
-- Name: map_levels map_levels_level_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: geometa
--

ALTER TABLE ONLY public.map_levels
    ADD CONSTRAINT map_levels_level_id_fkey FOREIGN KEY (level_id) REFERENCES public.levels(id) ON DELETE CASCADE;


--
-- Name: map_levels map_levels_map_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: geometa
--

ALTER TABLE ONLY public.map_levels
    ADD CONSTRAINT map_levels_map_id_fkey FOREIGN KEY (map_id) REFERENCES public.maps(id) ON DELETE CASCADE;


--
-- Name: map_regions map_regions_map_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: geometa
--

ALTER TABLE ONLY public.map_regions
    ADD CONSTRAINT map_regions_map_id_fkey FOREIGN KEY (map_id) REFERENCES public.maps(id) ON DELETE CASCADE;


--
-- Name: map_regions map_regions_region_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: geometa
--

ALTER TABLE ONLY public.map_regions
    ADD CONSTRAINT map_regions_region_id_fkey FOREIGN KEY (region_id) REFERENCES public.regions(id) ON DELETE CASCADE;


--
-- Name: maps maps_map_group_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: geometa
--

ALTER TABLE ONLY public.maps
    ADD CONSTRAINT maps_map_group_id_fkey FOREIGN KEY (map_group_id) REFERENCES public.map_groups(id) ON DELETE CASCADE;


--
-- Name: maps maps_user_id_user_id_fk; Type: FK CONSTRAINT; Schema: public; Owner: geometa
--

ALTER TABLE ONLY public.maps
    ADD CONSTRAINT maps_user_id_user_id_fk FOREIGN KEY (user_id) REFERENCES public."user"(id) ON DELETE CASCADE;


--
-- Name: meta_images meta_images_meta_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: geometa
--

ALTER TABLE ONLY public.meta_images
    ADD CONSTRAINT meta_images_meta_id_fkey FOREIGN KEY (meta_id) REFERENCES public.metas(id) ON DELETE CASCADE;


--
-- Name: meta_levels meta_levels_level_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: geometa
--

ALTER TABLE ONLY public.meta_levels
    ADD CONSTRAINT meta_levels_level_id_fkey FOREIGN KEY (level_id) REFERENCES public.levels(id) ON DELETE CASCADE;


--
-- Name: meta_levels meta_levels_meta_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: geometa
--

ALTER TABLE ONLY public.meta_levels
    ADD CONSTRAINT meta_levels_meta_id_fkey FOREIGN KEY (meta_id) REFERENCES public.metas(id) ON DELETE CASCADE;


--
-- Name: metas metas_map_group_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: geometa
--

ALTER TABLE ONLY public.metas
    ADD CONSTRAINT metas_map_group_id_fkey FOREIGN KEY (map_group_id) REFERENCES public.map_groups(id) ON DELETE CASCADE;


--
-- Name: session session_user_id_user_id_fk; Type: FK CONSTRAINT; Schema: public; Owner: geometa
--

ALTER TABLE ONLY public.session
    ADD CONSTRAINT session_user_id_user_id_fk FOREIGN KEY (user_id) REFERENCES public."user"(id);


--
-- Name: synced_locations synced_locations_synced_meta_id_synced_metas_meta_id_fk; Type: FK CONSTRAINT; Schema: public; Owner: geometa
--

ALTER TABLE ONLY public.synced_locations
    ADD CONSTRAINT synced_locations_synced_meta_id_synced_metas_meta_id_fk FOREIGN KEY (synced_meta_id) REFERENCES public.synced_metas(meta_id) ON DELETE CASCADE;


--
-- Name: synced_map_metas synced_map_metas_map_id_maps_id_fk; Type: FK CONSTRAINT; Schema: public; Owner: geometa
--

ALTER TABLE ONLY public.synced_map_metas
    ADD CONSTRAINT synced_map_metas_map_id_maps_id_fk FOREIGN KEY (map_id) REFERENCES public.maps(id) ON DELETE CASCADE;


--
-- Name: synced_map_metas synced_map_metas_synced_meta_id_synced_metas_meta_id_fk; Type: FK CONSTRAINT; Schema: public; Owner: geometa
--

ALTER TABLE ONLY public.synced_map_metas
    ADD CONSTRAINT synced_map_metas_synced_meta_id_synced_metas_meta_id_fk FOREIGN KEY (synced_meta_id) REFERENCES public.synced_metas(meta_id) ON DELETE CASCADE;


--
-- Name: synced_metas synced_metas_map_group_id_map_groups_id_fk; Type: FK CONSTRAINT; Schema: public; Owner: geometa
--

ALTER TABLE ONLY public.synced_metas
    ADD CONSTRAINT synced_metas_map_group_id_map_groups_id_fk FOREIGN KEY (map_group_id) REFERENCES public.map_groups(id) ON DELETE CASCADE;


--
-- PostgreSQL database dump complete
--

\unrestrict U7pophYKhnWfo6pJQmApegFvbbcURBZmrXMfduACDwtoYudKywRyb0dxk5FbaPn

